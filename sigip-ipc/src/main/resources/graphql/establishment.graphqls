type Establishment {
    id: Long!
    code: String!
    organization: String!
    name: String!
    address: String!
    contact: String!
    phone: Int!
    active: Boolean!
    market: MarketCurrency!
    typology: Typology!
    #    oneiIndex: OneiIndex!
    dpa: DPA!
    varietyEstablishments:[VarietyEstablishment!]
    state:State!
}


extend type Query {
    establishments:[Establishment!]
    establishmentsPaging(page: Int!, size: Int!):[Establishment!]
    totalEstablishment:Int
    establishmentById(id: Long!):Establishment!
    filterEstablishments(marketId:Long!,typologyId:Long!,dpaId: Long!,establishment: String!,code:String!,stateId:Long!,page: Int!, size: Int!):[Establishment!]
    pendingEstablishments(marketId:Long!,typologyId:Long!,dpaId: Long!,establishment: String!,code:String!,stateId:Long!,page: Int!, size: Int!):[Establishment!]
    totalEstablishmentsByFilter(marketId:Long!,typologyId:Long!,dpaId: Long!,establishment: String!,code:String!,stateId:Long!):Int!
    varietyCharactSpecificList(classifierId:Long!):[VarietyCharactSpecific!]
    isEstablishmentCatched(idEstablishment: Long!): Boolean!
}


extend type Mutation{
    addEstablishment(organization: String!,name: String!,address: String!,contact: String!,phone: Int!,marketId:Long!,typologyId:Long!,dpaId: Long!, stateId:Long!):Establishment!
    editEstablishment(id: Long!,name: String!,address: String!,contact: String!,phone: Int!):Establishment!
    deleteEstablishment(id: Long!):Boolean!
}
